{"name":"Subgen","tagline":"a fast subhalo sampler","body":"## `SubGen`: a fast subhalo sampler \r\n`SubGen` generates Monte-Carlo samples of dark matter subhaloes, according to the unified subhalo distribution model in Han et. al. (2015; coming soon). Download the code from http://kambrian.github.io/SubGen.\r\n\r\nTo get started, check `example.py`. You only need to specify the host halo mass, and the number of subhaloes to sample.\r\n\r\n### The basic sample contains:\r\n\r\n- R:     radial coordinate of subhalo, in unit of host R200\r\n- m:     subhalo mass, in unit of 10^10Msun/h. By default, disrupted subhaloes are also included in the sample (which may not be useful at all). You can suppress the creation of disrupted subhaloes, and only obtain survived population, by, e.g., \r\n        sample=SubhaloSample(M=1e4, include_disruption=False)\r\n- mAcc:  subhalo infall mass, in unit of 10^10Msun/h\r\n- weight: the number of appearances of this subhalo. This exists because the number of sampled subhaloes may not be the same as the expected number of subhaloes. The subhalo abundance can be correctly recovered when counting with this weight. By default, the weights are not uniform but determined by mass function in order to avoid the sample being dominated by low mass objects. If you want uniform weights, you can do, e.g., \r\n        sample=SubhaloSample(M=1e4, weighted_sample=False).\r\n\r\n### optional properties:  \r\n  - mStar/[1e10Msun/h],  the subhalo stellar mass\r\n  - Luminosity/[(1e10Msun/h)^2/(kpc/h)^3],  annihilation luminosity (adopting Ludlow14 mass-concentration by default)\r\n  - Rp/R200,  projected (along a line of sight) radial coordinate Rp. \r\n\r\nFor complete features, have a look at the docstrings and the source code (they are not long~).\r\n\r\n## Authors\r\nJiaxin Han (@Kambrian)[ICC, Durham]","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}